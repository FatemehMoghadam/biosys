# -*- coding: utf-8 -*-
# Generated by Django 1.9.9 on 2016-08-19 07:57
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import main.models
import timezone_field.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Dataset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('type', models.CharField(choices=[('generic', 'Generic'), ('observation', 'Observation'), ('species_observation', 'Species observation')], default='generic', max_length=100)),
                ('data_package', django.contrib.postgres.fields.jsonb.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='DatasetFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='%Y/%m/%d')),
                ('uploaded_date', models.DateTimeField(auto_now_add=True)),
                ('dataset', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main.Dataset')),
                ('uploaded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='GenericRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', django.contrib.postgres.fields.jsonb.JSONField()),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Dataset')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Observation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', django.contrib.postgres.fields.jsonb.JSONField()),
                ('datetime', models.DateTimeField(blank=True, null=True)),
                ('geometry', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=4326)),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Dataset')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Enter a brief title for the project (required).', max_length=300, unique=True, verbose_name='Title')),
                ('code', models.CharField(blank=True, help_text='Provide a brief code or acronym for this project. This code could be used for prefixing site codes.', max_length=30, null=True, verbose_name='Code')),
                ('datum', models.IntegerField(blank=True, choices=[(4326, b'WGS84'), (4283, b'GDA94'), (4203, b'AGD84'), (4202, b'AGD66'), (28350, b'GDA94 / MGA zone 50')], default=4326, help_text='The datum all locations will be assumed to have unless otherwise specified.', null=True, verbose_name='Default Datum')),
                ('timezone', timezone_field.fields.TimeZoneField(default=b'Australia/Perth')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='Comments')),
                ('attributes', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('attributes_schema', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_ID', models.IntegerField(default=main.models._calculate_site_ID, help_text='Site ID from Scientific Site Register.', unique=True, verbose_name='Site ID')),
                ('site_code', models.CharField(help_text='Local site code must be unique to this project. e.g. LCI123 (required)', max_length=100, verbose_name='Site Code')),
                ('site_name', models.CharField(blank=True, help_text='Enter a more descriptive name for this site, if one exists.', max_length=150, verbose_name='Site Name')),
                ('latitude', models.FloatField(blank=True, help_text='Latitude of site origin (e.g. corner, centroid, etc., required)', null=True)),
                ('longitude', models.FloatField(blank=True, help_text='Longitude of site origin (e.g. corner, centroid, etc., required)', null=True)),
                ('comments', models.TextField(blank=True, null=True, verbose_name='Comments')),
                ('geometry', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=4326, verbose_name='Geometry')),
                ('attributes', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('attributes_schema', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('parent_site', models.ForeignKey(blank=True, help_text="Sites can be grouped together. If you have a subregion within the project that contains a number of sites, create that region as a parent site first, then select that parent when you're creating this site.", null=True, on_delete=django.db.models.deletion.CASCADE, to='main.Site', verbose_name='Parent Site')),
                ('project', models.ForeignKey(help_text='Select the project this site is part of (required)', on_delete=django.db.models.deletion.CASCADE, to='main.Project', verbose_name='Project')),
            ],
        ),
        migrations.CreateModel(
            name='SpeciesObservation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', django.contrib.postgres.fields.jsonb.JSONField()),
                ('datetime', models.DateTimeField(blank=True, null=True)),
                ('geometry', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=4326)),
                ('input_name', models.CharField(help_text='Species Name (as imported)', max_length=500, verbose_name='Species Name')),
                ('name_id', models.IntegerField(default=-1, help_text='The unique ID from the species database', verbose_name='Name ID')),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Dataset')),
                ('site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.Site')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='observation',
            name='site',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.Site'),
        ),
        migrations.AddField(
            model_name='genericrecord',
            name='site',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.Site'),
        ),
        migrations.AddField(
            model_name='dataset',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', related_query_name='project', to='main.Project'),
        ),
        migrations.AlterUniqueTogether(
            name='site',
            unique_together=set([('project', 'site_code')]),
        ),
        migrations.AlterUniqueTogether(
            name='dataset',
            unique_together=set([('project', 'name')]),
        ),
    ]
