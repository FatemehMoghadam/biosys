# -*- coding: utf-8 -*-
# Generated by Django 1.9.6 on 2016-06-09 05:25
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('main', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AgeLookup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=500, verbose_name='Value')),
                ('code', models.CharField(blank=True, max_length=10, verbose_name='Code')),
                ('deprecated', models.BooleanField(default=False, verbose_name='Deprecated')),
            ],
            options={
                'ordering': ['value'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AnimalObservation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collector', models.CharField(blank=True, max_length=300, verbose_name='Collector')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Observation Date')),
                ('trap_no', models.CharField(blank=True, max_length=20, verbose_name='Trap No')),
                ('microchip_id', models.CharField(blank=True, max_length=30, verbose_name='Microchip number')),
                ('tissue_number', models.CharField(blank=True, help_text='Enter the sample number (e.g. tag number, DNA sample number)', max_length=30, verbose_name='Sample number')),
                ('tissue_type', models.CharField(blank=True, help_text='Enter DNA sample type (e.g. earclip, scute clip, hair sample)', max_length=30, verbose_name='DNA sample type')),
                ('fate', models.CharField(blank=True, help_text='What happened to animal after trapping', max_length=100, verbose_name='Fate')),
                ('gross_weight', models.FloatField(blank=True, help_text='Total weight of animal + bag (gms)', null=True, verbose_name='Gross weight (g)')),
                ('bag_weight', models.FloatField(blank=True, help_text='Total weight of bag (gms)', null=True, verbose_name='Bag weight (g)')),
                ('net_weight', models.FloatField(blank=True, null=True, verbose_name='Net weight (g)')),
                ('head_length', models.FloatField(blank=True, null=True, verbose_name='Head length (mm)')),
                ('pes_length', models.FloatField(blank=True, null=True, verbose_name='Pes length (mm)')),
                ('reproductive_condition', models.CharField(blank=True, max_length=100, verbose_name='Reproductive condition')),
                ('pouch', models.CharField(blank=True, max_length=100, verbose_name='Pouch')),
                ('test_length', models.FloatField(blank=True, null=True, verbose_name='Testes length')),
                ('test_width', models.FloatField(blank=True, null=True, verbose_name='Testes width')),
                ('svl', models.FloatField(blank=True, null=True, verbose_name='Head-Body')),
                ('tail_length', models.FloatField(blank=True, null=True, verbose_name='Tail length')),
                ('tail_condition', models.CharField(blank=True, max_length=200, verbose_name='Tail condition')),
                ('comments', models.TextField(blank=True, verbose_name='Comments')),
                ('age', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='animals.AgeLookup', verbose_name='Age')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CaptureTypeLookup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=500, verbose_name='Value')),
                ('code', models.CharField(blank=True, max_length=10, verbose_name='Code')),
                ('deprecated', models.BooleanField(default=False, verbose_name='Deprecated')),
            ],
            options={
                'ordering': ['value'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ObservationTypeLookup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=500, verbose_name='Value')),
                ('code', models.CharField(blank=True, max_length=10, verbose_name='Code')),
                ('deprecated', models.BooleanField(default=False, verbose_name='Deprecated')),
            ],
            options={
                'ordering': ['value'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OpportunisticObservation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Date')),
                ('observer', models.CharField(blank=True, max_length=100, verbose_name='Observer')),
                ('latitude', models.FloatField(blank=True, null=True, verbose_name='Latitude')),
                ('longitude', models.FloatField(blank=True, null=True, verbose_name='Longitude')),
                ('accuracy', models.FloatField(blank=True, default=30.0, null=True, verbose_name='Accuracy (m)')),
                ('datum', models.IntegerField(blank=True, choices=[(4326, 'WGS84'), (4283, 'GDA94'), (4203, 'AGD84'), (4202, 'AGD66')], default=4326, null=True, verbose_name='Datum')),
                ('comments', models.TextField(blank=True, verbose_name='Comments')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='main.LocationLookup', verbose_name='Location')),
                ('observation_type', models.ForeignKey(blank=True, help_text='e.g: Bird', null=True, on_delete=django.db.models.deletion.PROTECT, to='animals.ObservationTypeLookup', verbose_name='Observation Type')),
                ('species', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.OldSpeciesObservation', verbose_name='Species')),
            ],
        ),
        migrations.CreateModel(
            name='SexLookup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=500, verbose_name='Value')),
                ('code', models.CharField(blank=True, max_length=10, verbose_name='Code')),
                ('deprecated', models.BooleanField(default=False, verbose_name='Deprecated')),
            ],
            options={
                'ordering': ['value'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Trap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trapline_ID', models.CharField(blank=True, max_length=50, null=True, verbose_name='Trap Line ID')),
                ('open_date', models.DateField(blank=True, null=True, verbose_name='Open Date')),
                ('close_date', models.DateField(blank=True, null=True, verbose_name='Close Date')),
                ('datum', models.IntegerField(blank=True, choices=[(4326, 'WGS84'), (4283, 'GDA94'), (4203, 'AGD84'), (4202, 'AGD66')], default=4326, null=True, verbose_name='Datum')),
                ('start_latitude', models.FloatField(blank=True, null=True, verbose_name='Start Latitude')),
                ('start_longitude', models.FloatField(blank=True, null=True, verbose_name='Start Longitude')),
                ('stop_latitude', models.FloatField(blank=True, null=True, verbose_name='Stop Latitude')),
                ('stop_longitude', models.FloatField(blank=True, null=True, verbose_name='Stop Longitude')),
                ('accuracy', models.FloatField(default=30.0, verbose_name='Accuracy (m)')),
                ('traps_number', models.IntegerField(blank=True, null=True, verbose_name='Number of Traps')),
                ('comments', models.TextField(blank=True, verbose_name='Comments')),
                ('site_visit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.SiteVisit', verbose_name='Site Visit')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TrapTypeLookup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=500, verbose_name='Value')),
                ('code', models.CharField(blank=True, max_length=10, verbose_name='Code')),
                ('deprecated', models.BooleanField(default=False, verbose_name='Deprecated')),
            ],
            options={
                'ordering': ['value'],
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='trap',
            name='trap_type',
            field=models.ForeignKey(blank='', on_delete=django.db.models.deletion.PROTECT, to='animals.TrapTypeLookup', verbose_name='Trap Type'),
        ),
        migrations.AddField(
            model_name='animalobservation',
            name='capture_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='animals.CaptureTypeLookup', verbose_name='Capture Type'),
        ),
        migrations.AddField(
            model_name='animalobservation',
            name='sex',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='animals.SexLookup', verbose_name='Sex'),
        ),
        migrations.AddField(
            model_name='animalobservation',
            name='site_visit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.SiteVisit', verbose_name='Site Visit'),
        ),
        migrations.AddField(
            model_name='animalobservation',
            name='species',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.OldSpeciesObservation', verbose_name='Species'),
        ),
        migrations.AddField(
            model_name='animalobservation',
            name='trap_type',
            field=models.ForeignKey(blank='', null=True, on_delete=django.db.models.deletion.PROTECT, to='animals.TrapTypeLookup', verbose_name='Trap Type'),
        ),
    ]
